name: Deploy Personal Site

on:
  push:
    branches:
      - main
  workflow_dispatch: # allows manual trigger

jobs:
  # -----------------------------
  # 1️⃣ Terraform: infrastructure
  # -----------------------------
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[infra]')
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve

  # -----------------------------
  # 2️⃣ Build and Push Docker
  # -----------------------------
  docker:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t owensweet/personal-site:latest ./app
          docker push owensweet/personal-site:latest

  # -----------------------------
  # 3️⃣ Deploy to EC2 with Docker Compose
  # -----------------------------
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_PEM }}
          port: 22
          script: |
            cd /home/ec2-user/personal-site
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker system prune -f

